---
const { arrayInfo, index } = Astro.props;
const { title, description, img, base64,  imgDirection = "left" } = arrayInfo;
---

<article class:list={`container ${imgDirection === "rigth" && "imgDirection"}`}>
    <div style="overflow: hidden ; border-radius: 1rem; grid-area: imagen;">
        <img 
            class="Split__Imagen" 
            data-srcx={img} 
            style={`background-image: url(${base64})`}
            alt={`${title} - IISEP`} />
    </div>
    <div class="contenido">
        <span class="contenido__number">{index + 1}</span>
        <h3>{title}</h3>
        <p>{description}</p>
    </div>
</article>

<style lang="scss">
    .container {
        width: min(100%, 850px);
        margin-inline: auto;
        display: grid;
        justify-content: center;
        gap: 1.5rem;
        grid-template-columns: 1fr;
        grid-template-areas:
            "contenido"
            "imagen";
        content-visibility: auto;

        @media (width > 768px) {
            grid-template-columns: 1fr 1fr;
            grid-template-areas: "contenido imagen";

            &.imgDirection {
                grid-template-areas: "imagen contenido";
            }
        }
    }

    .contenido {
        grid-area: contenido;
        display: grid;
        align-content: center;
        text-align: left;
        gap: 1rem;

        &__number{
            background-color: var(--color-Secondary);
            justify-self: start;
            padding: .5rem 1rem;
            border-radius: 50%;
            color: white;
            font-weight: 700;
        }
    }

    .Split__Imagen {
        filter: saturate(0.8);
        transition:
            transform 0.7s,
            filter 0.7s;
        aspect-ratio: 16/9;

        @media (min-width: 768px) {
            aspect-ratio: 1/1;
        }

        &:hover {
            transform: scale(1.15);
            filter: saturate(1);
        }
    }
</style>

<script>
    document.addEventListener("astro:page-load", function () {
        const images = document.querySelectorAll(".Split__Imagen");

        const imgOptions = {rootMargin: `0px 0px 300px 0px`,};
        const imgObserver = new IntersectionObserver((entries, imgObserver) => {
            entries.forEach((entry) => {
                if (!entry.isIntersecting) return;

                const img = entry.target as HTMLImageElement;
                img.src = img.getAttribute("data-srcx");
                imgObserver.unobserve(entry.target);
            });
        }, imgOptions);

        images.forEach((img) => {
            imgObserver.observe(img);
        });
    });
</script>
